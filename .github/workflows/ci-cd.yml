name: Java CI/CD Pipeline

# Trigger the pipeline on push or pull request to the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Define jobs
jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use Ubuntu runner (free tier)

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'  # Eclipse Temurin JDK

    # Step 3: Compile Java files in the root directory
    - name: Compile
      run: |
        mkdir -p classes
        javac -d classes *.java
        echo "Build successful!"

    # Step 4: Run JUnit 5 tests
    - name: Run Tests
      run: |
        curl -L -o junit-api.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar
        curl -L -o junit-engine.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-engine/5.10.0/junit-jupiter-engine-5.10.0.jar
        curl -L -o platform.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar
        curl -L -o hamcrest.jar https://repo1.maven.org/maven2/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar
        java -cp "classes:junit-api.jar:junit-engine.jar:platform.jar:hamcrest.jar" org.junit.platform.console.ConsoleLauncher --select-class MathUtilsTest
      continue-on-error: false  # Fail pipeline if tests fail

    # Step 5: Create JAR artifact
    - name: Create JAR
      run: |
        cd classes
        jar cf ../myapp.jar *
        echo "JAR created"

    # Step 6: Upload JAR as artifact
    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: myapp-jar
        path: myapp.jar

    # Step 7: Simulate deployment (runs only on main branch pushes)
    - name: Simulate Deploy
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to staging..."
